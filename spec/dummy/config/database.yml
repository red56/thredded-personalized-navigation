<%
adapter = ENV.fetch('DB', 'sqlite3')
db_host    = ENV.fetch('DB_HOST', ENV.fetch('THREDDED_DB_1_PORT_5432_TCP_ADDR', 'localhost'))
db_port    = ENV['THREDDED_DB_1_PORT_5432_TCP_PORT'] || ENV['DB_PORT'] ||
  {'postgresql' => 5432, 'mysql2' => 3306}[adapter]
if adapter == 'sqlite3'
  database =  {
    development: ENV.fetch('DATABASE_FILE', 'db/development.sqlite3').inspect,
    test: ENV.fetch('DATABASE_FILE', 'db/test.sqlite3').inspect,
    production: 'db/production.sqlite3'
  }
else
  database = {
    development: 'thredded_workgroup_dev',
    test: 'thredded_workgroup_test',
    production: 'thredded_workgroup_production'
  }
end
require 'etc'
pool_size =
  ENV['DB_POOL_SIZE'] ||
  # Web: max workers * max threads
  ENV.fetch('WEB_CONCURRENCY', 3).to_i * ENV.fetch('MAX_THREADS', 5).to_i +
  # ActiveJob Async max thread pool size
  Etc.nprocessors
%>

defaults: &defaults
  host: <%= db_host %>
  port: <%= db_port %>
  adapter: <%= adapter %>
  encoding: utf8
  min_messages: WARNING
  pool: <%= pool_size %>
  username: <%= ENV.fetch('DB_USERNAME', 'thredded').inspect %>
  password: <%= ENV.fetch('DB_PASSWORD', 'thredded').inspect %>

development:
  <<: *defaults
  database: <%= database[:development] %>
test:
  <<: *defaults
  database: <%= database[:test] %>
  <% if adapter == 'sqlite3'%>options: "PRAGMA journal_mode = MEMORY"<% end%>
production:
  <<: *defaults
  encoding: utf8
  min_messages: WARNING
  url: <%= ENV['DATABASE_URL'].inspect if ENV['DATABASE_URL'] %>
  database: <%= database[:production] %>
